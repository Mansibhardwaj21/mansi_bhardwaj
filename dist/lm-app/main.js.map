{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kFAAkF,OAAO,qeAAqe,gBAAgB,oFAAoF,eAAe,oFAAoF,gBAAgB,oFAAoF,sBAAsB,oFAAoF,gBAAgB,qN;;;;;;;;;;;;;;;;;;;;;;;;;ACAj7B;AACG;AASrD;IACE,sBAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAEpD,UAAK,GAAG,8BAA8B,CAAC;IAFiB,CAAC;IAKzD,mCAAY,GAAZ;QAAA,iBAGC;QAFG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI,IAAE,YAAI,CAAC,SAAS,GAAC,IAAI,EAAnB,CAAmB,EAAC,aAAG,IAAE,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAEnG,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAbU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAE,CAAE,iEAAe,CAAE;SAC/B,CAAC;yCAEqC,iEAAe;OADzC,YAAY,CAcxB;IAAD,mBAAC;CAAA;AAdwB;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACe;AAET;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa,EAAC,qEAAgB;aAC/B;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACd0B;AACL;AAI3C;IACI,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IACL,sCAAY,GAAZ;QACI,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,4CAA4C,CAAC,CAAC;IAEnF,CAAC;IAPY,eAAe;QAD3B,gEAAU,EAAE;yCAEiB,+DAAU;OAD3B,eAAe,CAQ3B;IAAD,sBAAC;CAAA;AAR2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{title}}!\\r\\n  </h1>\\r\\n</div>\\r\\n<div>\\r\\n    <table border=\\\"1\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>Employee ID</th>\\r\\n                <th>Employee Name</th>\\r\\n                <th>Email</th>\\r\\n                <th>Phone Number</th>\\r\\n                <th>Manager ID</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody class=\\\"employees\\\">\\r\\n            <tr *ngFor=\\\"let employee of employees\\\">\\r\\n                <td>\\r\\n                    <h5>{{employee.empId}}</h5>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <h5>{{employee.name}}</h5>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <h5>{{employee.email}}</h5>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <h5>{{employee.phoneNumber}}</h5>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <h5>{{employee.mgrId}}</h5>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <button>Login</button>\\r\\n                </td>                \\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from './employee.service';\r\nimport { Employee } from './employee';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [ EmployeeService ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private employeeService: EmployeeService) { }\r\n\r\n  title = 'Leave Management Application';\r\n  employees: Employee[];\r\n\r\n  getEmployees(): void {\r\n      this.employeeService.getEmployees().subscribe(data=>this.employees=data,err=>console.log(err));\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmployees();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Employee } from './employee';\r\nimport { Observable } from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class EmployeeService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\ngetEmployees(): Observable<Employee[]> {\r\n    console.log('getEmployees called on employee.service');\r\n    return this.http.get<Employee[]>('http://localhost:8080/MLP204/api/employees');\r\n   \r\n}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}